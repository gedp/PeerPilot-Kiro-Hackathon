# yaml-language-server: $schema=service: peerpilot-document-processor
service: peerpilot-document-processor

provider:
  name: aws
  runtime: python3.12
  region: us-east-1
  stage: ${opt:stage, 'dev'}
  
  environment:
    S3_BUCKET_NAME: peerpilot-kiro-data
    AWS_DEFAULT_REGION: us-east-1
  
  iamRoleStatements:
    - Effect: Allow
      Action:
        - s3:GetObject
        - s3:GetObjectVersion
      Resource:
        - "arn:aws:s3:::peerpilot-kiro-data/*"
    - Effect: Allow
      Action:
        - s3:PutObject
        - s3:PutObjectAcl
        - s3:DeleteObject
      Resource:
        - "arn:aws:s3:::peerpilot-kiro-data/*"
    - Effect: Allow
      Action:
        - s3:ListBucket
        - s3:GetBucketLocation
        - s3:CreateBucket
      Resource:
        - "arn:aws:s3:::peerpilot-kiro-data"
    - Effect: Allow
      Action:
        - textract:StartDocumentTextDetection
        - textract:GetDocumentTextDetection
        - textract:DetectDocumentText
        - textract:AnalyzeDocument
        - textract:StartDocumentAnalysis
        - textract:GetDocumentAnalysis
      Resource: "*"
    - Effect: Allow
      Action:
        - logs:CreateLogGroup
        - logs:CreateLogStream
        - logs:PutLogEvents
      Resource: "*"

functions:
  processDocument:
    handler: lambda_function.lambda_handler
    timeout: 900  # 15 minutes for large document processing
    memorySize: 1024  # Increased memory for better performance
    environment:
      TEXTRACT_MAX_WAIT_TIME: 600
      SYNC_EXTRACTION_SIZE_LIMIT: 5
      MIN_CONFIDENCE_THRESHOLD: 80
    events:
      - s3:
          bucket: peerpilot-kiro-data
          existing: true
          event: s3:ObjectCreated:*
          rules:
            - prefix: input-articles/
            - suffix: .pdf

resources:
  Resources:
    S3Bucket:
      Type: AWS::S3::Bucket
      Properties:
        BucketName: peerpilot-kiro-data
        PublicAccessBlockConfiguration:
          BlockPublicAcls: true
          BlockPublicPolicy: true
          IgnorePublicAcls: true
          RestrictPublicBuckets: true

plugins:
  - serverless-python-requirements

custom:
  pythonRequirements:
    dockerizePip: true
    slim: true
